# Value for the security chart

privileged:
  
  # if true, must provide spec below. see https://kubernetes.io/docs/concepts/policy/pod-security-policy/ for more details
  enabled: true
  
  # annotations to add to the privileged psp
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
  
  # spec of the privileged psp
  spec:
    privileged: true
    allowPrivilegeEscalation: true
    allowedCapabilities:
    - '*'
    volumes:
    - '*'
    hostNetwork: true
    hostPorts:
    - min: 0
      max: 65535
    hostIPC: true
    hostPID: true
    runAsUser:
      rule: 'RunAsAny'
    seLinux:
      rule: 'RunAsAny'
    supplementalGroups:
      rule: 'RunAsAny'
    fsGroup:
      rule: 'RunAsAny'
  
  # map of namespace: serviceaccounts to grant access to the privileged psp
  # serviceAccounts:
  #   default: default
  
  # list of groups to grant access to the privileged psp
  # groups:
  # - system:serviceaccounts
  # - system:authenticated

restricted:
  
  # if true, must provide spec below. see https://kubernetes.io/docs/concepts/policy/ pod-security-policy/ for more details
  enabled: true

  # annotations to add to the restricted psp
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'

  # spec of the restricted psp
  spec:
    privileged: false
    # Required to prevent escalations to root.
    allowPrivilegeEscalation: false
    # This is redundant with non-root + disallow privilege escalation,
    # but we can provide it for defense in depth.
    requiredDropCapabilities:
      - ALL
    # Allow core volume types.
    volumes:
      - 'configMap'
      - 'emptyDir'
      - 'projected'
      - 'secret'
      - 'downwardAPI'
      # Assume that persistentVolumes set up by the cluster admin are safe  to use.
      - 'persistentVolumeClaim'
    hostNetwork: false
    hostIPC: false
    hostPID: false
    runAsUser:
      # Require the container to run without root privileges.
      rule: 'MustRunAsNonRoot'
    seLinux:
      # This policy assumes the nodes are using AppArmor rather than SELinux.
      rule: 'RunAsAny'
    supplementalGroups:
      rule: 'MustRunAs'
      ranges:
        # Forbid adding the root group.
        - min: 1
          max: 65535
    fsGroup:
      rule: 'MustRunAs'
      ranges:
        # Forbid adding the root group.
        - min: 1
          max: 65535
    readOnlyRootFilesystem: false
  
  # map of namespace: serviceaccounts to grant access to the restricted psp
  # serviceAccounts:
  #   default: default
  
  # list of groups to grant access to the privileged psp
  # groups:
  # - system:serviceaccounts
  # - system:authenticated