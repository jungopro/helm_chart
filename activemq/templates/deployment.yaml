apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "activemq.fullname" . }}
  labels:
    {{- include "activemq.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "activemq.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "activemq.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "activemq.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if or .Values.configs .Values.secrets }}
          env:
          {{- with .Values.secrets }}
          # Loop through all secrets under .Values.secrets
            {{- range $key, $value := .}}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  {{- range $subkey, $subvalue := .}}
                  name: {{ $subkey }}
                  key: {{ $subvalue }}
                  {{- end }}
            {{- end }}
          {{- end }}
          {{- with .Values.configs }}
          # Loop through all configs under .Values.configs
            {{- range $key, $value := .}}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  {{- range $subkey, $subvalue := .}}
                  name: {{ $subkey }}
                  key: {{ $subvalue }}
                  {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
          {{- with .Values.ports }}  
          ports:
            {{- range $key, $value := . }}
            - name: {{ $key }}
              containerPort: {{ $value.containerPort }}
              protocol: {{ $value.protocol }}
            {{- end }}
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/opt/activemq/data"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- if and .Values.persistence.enabled (eq .Values.persistence.type "pvc") }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "activemq.fullname" .) }}
        {{- else }}
        - name: storage
          emptyDir: {}
        {{- end -}}
